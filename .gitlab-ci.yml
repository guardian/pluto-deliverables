stages:
  - buildntest
  - upload

django:
  image: python:3.8-alpine
  stage: buildntest
  services:
    - postgres:9.6
  variables:
    POSTGRES_DB: pluto-deliverables
    POSTGRES_USER: pluto-deliverables
    POSTGRES_PASSWORD: pluto-deliverables
    POSTGRES_HOST_AUTH_METHOD: trust
    DB_HOST: "postgres"
  script:
    - apk add postgresql-dev alpine-sdk libffi-dev
    - git submodule init
    - git submodule update
    - pip install -r requirements.txt
    - pip install -r gnmvidispine/requirements.txt
    - cd gnmvidispine && CIRCLE_BUILD_NUM=$CI_PIPELINE_IID python ./setup.py install && cd ..
    - sleep 10
    - python ./manage.py test gnm_deliverables.tests

frontend:
  image: node:12.18-alpine3.12
  stage: buildntest
  script:
    # git is required for yarn to be able to checkout the shared components
    - apk add --no-cache git
    - sh ./setup_headers.sh
    - cd frontend
    - yarn install
    - yarn lint
    - yarn test
    - yarn build:prod
  cache:
    key: ${CI_COMMIT_REF_SLUG}-node
    paths:
      - frontend/node_modules/
  artifacts:
    paths:
      - gnm_deliverables/static/app.js
    reports:
      junit: frontend/junit.xml

upload:
  image: "docker:19.03.11"
  stage: upload
  services:
    - docker:dind

  script:
    - apk add git
    - git submodule init
    - git submodule update
    - echo "version_commit = \"$CI_COMMIT_SHA\"" > gnm_deliverables/version.py
    - echo "version_branch = \"$CI_COMMIT_BRANCH\"" >> gnm_deliverables/version.py
    - echo "version_timestamp = \"$CI_COMMIT_TIMESTAMP\"" >> gnm_deliverables/version.py
    - docker build . -t guardianmultimedia/pluto-deliverables:$CI_PIPELINE_IID
    - docker login -u "${DOCKER_USER}" -p "${DOCKER_PAT}"
    - docker push guardianmultimedia/pluto-deliverables:$CI_PIPELINE_IID
    - "echo ci_commit_branch: ${CI_COMMIT_BRANCH} >> build-info.yaml"
    - "echo ci_commit_ref_name: ${CI_COMMIT_REF_NAME} >> build-info.yaml"
    - "echo ci_commit_sha: ${CI_COMMIT_SHA} >> build-info.yaml"
    - "echo ci_commit_timestamp: ${CI_COMMIT_TIMESTAMP} >> build-info.yaml"
    - "echo ci_commit_title: \\\"${CI_COMMIT_TITLE}\\\" >> \"build-info.yaml\""
    - "echo ci_job_url: ${CI_JOB_URL} >> build-info.yaml"
    - "echo ci_project_name: ${CI_PROJECT_NAME} >> build-info.yaml"
    - "echo ci_merge_request_project_url: \"${CI_MERGE_REQUEST_PROJECT_URL}\" >> \"build-info.yaml\""
    - "echo ci_merge_request_title: \"${CI_MERGE_REQUEST_TITLE}\" >> \"build-info.yaml\""
    - "echo ci_pipeline_iid: ${CI_PIPELINE_IID} >> build-info.yaml"
    - "echo built_image: guardianmultimedia/pluto-deliverables:$CI_PIPELINE_IID >> build-info.yaml"
  artifacts:
    paths:
      - build-info.yaml    

