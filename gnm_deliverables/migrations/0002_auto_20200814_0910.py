# Generated by Django 3.1 on 2020-08-14 09:10

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('gnm_deliverables', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyMotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_motion_url', models.TextField(blank=True, null=True)),
                ('daily_motion_title', models.TextField()),
                ('daily_motion_description', models.TextField(blank=True, null=True)),
                ('daily_motion_tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), null=True, size=None)),
                ('daily_motion_category', models.BigIntegerField(blank=True, null=True)),
                ('publication_date', models.DateTimeField(blank=True, null=True)),
                ('upload_status', models.TextField(blank=True, choices=[('Not ready', 'Not ready'), ('Ready for Upload', 'Ready for Upload'), ('Uploading', 'Uploading'), ('Upload Failed', 'Upload Failed'), ('Upload Complete', 'Upload Complete')], db_index=True, null=True)),
                ('daily_motion_no_mobile_access', models.BooleanField()),
                ('daily_motion_contains_adult_content', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='GNMWebsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_atom_id', models.UUIDField(blank=True, null=True)),
                ('upload_status', models.TextField(blank=True, choices=[('Not ready', 'Not ready'), ('Ready for Upload', 'Ready for Upload'), ('Uploading', 'Uploading'), ('Upload Failed', 'Upload Failed'), ('Upload Complete', 'Upload Complete')], db_index=True, null=True)),
                ('production_office', models.TextField(blank=True, choices=[('UK', 'UK'), ('US', 'US'), ('AUS', 'AUS')], db_index=True, null=True)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255, null=True), blank=True, db_index=True, null=True, size=None)),
                ('publication_date', models.DateTimeField(blank=True, null=True)),
                ('website_title', models.TextField(blank=True, db_index=True, null=True)),
                ('website_description', models.TextField(blank=True, null=True)),
                ('primary_tone', models.TextField(blank=True, choices=[('News', 'News'), ('Explainer', 'Explainer'), ('Documentary', 'Documentary'), ('Comment', 'Comment'), ('Analysis', 'Analysis'), ('Feature', 'Feature'), ('Interview', 'Interview'), ('Performance', 'Performance')], db_index=True, null=True)),
                ('publication_status', models.TextField(blank=True, choices=[('Unpublished', 'Unpublished'), ('Published', 'Published'), ('Superceded', 'Superceded')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mainstream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mainstream_title', models.TextField()),
                ('mainstream_description', models.TextField(blank=True, null=True)),
                ('mainstream_tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), size=None)),
                ('mainstream_rules_contains_adult_content', models.BooleanField()),
                ('upload_status', models.TextField(blank=True, choices=[('Not ready', 'Not ready'), ('Ready for Upload', 'Ready for Upload'), ('Uploading', 'Uploading'), ('Upload Failed', 'Upload Failed'), ('Upload Complete', 'Upload Complete')], db_index=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Youtube',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('youtube_id', models.TextField(db_index=True)),
                ('youtube_title', models.TextField()),
                ('youtube_description', models.TextField(blank=True, null=True)),
                ('youtube_tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), null=True, size=None)),
                ('youtube_categories', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), null=True, size=None)),
                ('youtube_channels', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), null=True, size=None)),
                ('publication_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.RenameField(
            model_name='deliverableasset',
            old_name='item_id',
            new_name='online_item_id',
        ),
        migrations.AddField(
            model_name='deliverable',
            name='commission_id',
            field=models.BigIntegerField(db_index=True, default=-1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='deliverable',
            name='pluto_core_project_id',
            field=models.BigIntegerField(db_index=True, default=-1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='deliverableasset',
            name='archive_item_id',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='deliverableasset',
            name='nearline_item_id',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='deliverable',
            name='project_id',
            field=models.CharField(blank=True, max_length=61, null=True),
        ),
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('sender', models.TextField(db_index=True)),
                ('log_line', models.TextField()),
                ('related_daily_motion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gnm_deliverables.dailymotion')),
                ('related_gnm_website', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gnm_deliverables.gnmwebsite')),
                ('related_mainstream', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gnm_deliverables.mainstream')),
                ('related_youtube', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gnm_deliverables.youtube')),
            ],
        ),
        migrations.AddField(
            model_name='deliverableasset',
            name='DailyMotion_master',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gnm_deliverables.dailymotion'),
        ),
        migrations.AddField(
            model_name='deliverableasset',
            name='gnm_website_master',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gnm_deliverables.gnmwebsite'),
        ),
        migrations.AddField(
            model_name='deliverableasset',
            name='mainstream_master',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gnm_deliverables.mainstream'),
        ),
        migrations.AddField(
            model_name='deliverableasset',
            name='youtube_master',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gnm_deliverables.youtube'),
        ),
    ]
